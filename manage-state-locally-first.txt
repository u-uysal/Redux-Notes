class DisplayMessages extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      input: "",
      messages: []
    };
    this.handleChange = this.handleChange.bind(this);
    this.submitMessage = this.submitMessage.bind(this);
    this.addItem = this.addItem.bind(this);
  }
  // Add handleChange() and submitMessage() methods here
  handleChange(event) {
    this.setState((prevState) => {
      return {
        ...prevState,
        input: event.target.value
      };
    });
  }
  addItem(item) {
    if (this.state.input !== "") {
      this.setState((prevState) => {
        return {
          messages: prevState.messages.concat(item)
        };
      });
    }
  }
  submitMessage(event) {
    event.preventDefault();

    this.addItem(this.state.input);
    this.setState({
      input: ""
    });
  }

  render() {
    return (
      <div>
        <h2>Type in a new Message:</h2>
        {/* Render an input, button, and ul below this line */}
        <input
          type="text"
          value={this.state.input}
          onChange={this.handleChange}
        />
        <button onClick={this.submitMessage}>Send</button>
        <ul>
          {this.state.messages.map((item) => (
            <li>{item}</li>
          ))}
        </ul>

        {/* Change code above this line */}
      </div>
    );
  }
}
